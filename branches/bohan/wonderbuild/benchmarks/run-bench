#! /bin/sh

set -x &&

jobs=4 &&
wonderbuild=../../wonderbuild.py &&
fbuild=../../fbuild/fbuild-light &&
waf=../../waf/waf-light &&
scons=../../scons/src/ &&
jython='java -jar ../../jython/jython.jar' &&
fabricate='../../fabricate/fabricate.py' &&

measure() {
	if which time; then time "$@"; else case "$SHELL" in bash) time "$@";; *) bash -c "time $*";; esac; fi
	#strace -fF "$@"
} &&

dummy_change() {
	for file
	do
		echo changing $file &&
		echo >> $file
	done
} &&

main() {
	op=$1 && shift &&
	tool=$1 && shift &&
	
	change=$(
		case $tool in
			fabricate) echo dummy_change;;
			*) echo touch;;
		esac
	) &&
	
	cd $(dirname $0)/bench-$tool &&

	case $op in
		reset) rm -Rf build-$tool ;;
		no-op) ;;
		small) $change lib_17/class_17.hpp ;;
		big)   $change lib_17/*.hpp ;;
	esac &&

	case $tool in
		wonderbuild)
			measure $wonderbuild         --bld-dir=build-$tool --cxx=g++ --jobs=$jobs "$@"
		;;
	
		wonderbuild-on-jython)
			measure $jython $wonderbuild --bld-dir=build-$tool --cxx=g++ --jobs=$jobs "$@"
		;;

		fbuild)
			# fbuild lacks a silent option!
			if test -x $fbuild.dev-null
			then measure $fbuild.dev-null --buildroot=build-$tool --jobs=$jobs "$@"
			else measure $fbuild          --buildroot=build-$tool --jobs=$jobs "$@"
			fi
		;;
	
		waf)
			if ! test -d build-$tool
			then
				$waf configure
			fi &&
			# waf lacks a silent option!
			if test -x $waf.dev-null
			then measure $waf.dev-null --jobs=$jobs "$@"
			else measure $waf          --jobs=$jobs "$@"
			fi
		;;

		waf-on-jython)
			if test $op = reset
			then
				rm -Rf build-waf
			fi &&
			if ! test -d build-waf
			then
				$jython $waf configure
			fi &&
			# waf lacks a silent option!
			if test -x $waf-on-jython.dev-null
			then measure $waf-on-jython.dev-null --jobs=$jobs "$@"
			else measure $jython $waf            --jobs=$jobs "$@"
			fi
		;;

		scons)
			SCONS_LIB_DIR=$(cd $scons && pwd)/engine \
				measure python $scons/script/scons.py  --no-cache --jobs=$jobs "$@"
		;;

		scons-on-jython)
			SCONS_LIB_DIR=$(cd $scons && pwd)/engine \
				measure $jython $scons/script/scons.py --no-cache --jobs=$jobs "$@"
		;;

		make)
			if test $op = reset
			then
				make -r clean --silent
			fi &&
			measure make -r --jobs=$jobs "$@"
		;;

		jam)
			if test $op = reset
			then
				jam clean
			fi &&
			measure jam -j$jobs "$@"
		;;

		autotools)
			if ! test -f configure
			then
				autoreconf --install --symlink
			fi &&
			if ! test -d build-$tool
			then
				mkdir build-$tool &&
				(cd build-$tool && ../configure --disable-shared CXXFLAGS=)
			fi &&
			measure make -C build-$tool -r --jobs=$jobs "$@"
		;;

		cmake)
			if ! test -d build-$tool
			then
				mkdir build-$tool &&
				(cd build-$tool && cmake ..)
			fi &&
			measure make -C build-$tool -r --jobs=$jobs "$@"
		;;

		fabricate)
			if test $op = reset
			then
				rm -f lib_*/*.o lib_*/*.a
			fi &&
			if ! test -e $(basename $fabricate)
			then
				ln -s $fabricate .
			fi &&
			measure python ./build.py
		;;
	esac
} &&

main "$@"
