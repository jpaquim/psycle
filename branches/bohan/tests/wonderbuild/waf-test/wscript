#! /usr/bin/env waf

APPNAME = 'waf-test'
VERSION = '0.0.1'

srcdir = '.'
blddir = '++build'

def init():
	pass

def set_options(opt):
	opt.tool_options('compiler_cxx')

def configure(conf):
	conf.check_tool('compiler_cxx')
	conf.env['CPPPATH'].append('src')

def _program(bld, target, types, sources, includes, uselib_local = None):
	if 'static' in types:
		st = bld.new_task_gen('cxx', 'program')
		st.target = target + '-static'
		st.source = sources
		st.includes = includes
		if uselib_local: st.uselib_local = [u + '-static' for u in uselib_local]
	if 'shared' in types:
		sh = bld.new_task_gen('cxx', 'program')
		sh.target = target + '-shared'
		sh.source = sources
		sh.includes = includes
		if uselib_local: sh.uselib_local = [u + '-shared' for u in uselib_local]

def _lib(bld, target, types, sources, includes, headers, uselib_local = None):
	if 'static' in types:
		st = bld.new_task_gen('cxx', 'staticlib')
		st.name = target + '-static'
		st.target = target
		st.includes = includes
		st.source = sources
		if uselib_local: p.uselib_local = [u + '-static' for u in uselib_local]
	if 'shared' in types:
		sh = bld.new_task_gen('cxx', 'shlib')
		sh.name = target + '-shared'
		sh.target = target
		sh.source = sources
		sh.includes = includes
		if uselib_local: p.uselib_local = [u + '-shared' for u in uselib_local]
	global APPNAME, VERSION
	bld.install_files('${PREFIX}/include/' + APPNAME + '-' + VERSION, headers)

def build(bld):
	#bld.add_subdirs('../diversalis')
	foo = _lib(bld, 'foo', ['static', 'shared'], ['src/foo/foo.cpp'], ['src'], ['src/foo/foo.hpp'])
	main = _program(bld, 'main', ['static', 'shared'], ['src/main/main.cpp'], ['src'], ['foo'])
	bld.install_as('${PREFIX}/include/bar/bar.hpp', 'src/bar/bar.hpp')

def shutdown():
	pass
