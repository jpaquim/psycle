#! /bin/sh

##############################################################################
#
# This source is free software ; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation ; either version 2, or (at your option) any later version.
# copyright 2004-2007 johan boule <bohan@jabber.org>
# copyright 2004-2007 psycledelics http://psycle.pastnotecut.org
#
# Adapts any unix system to the posix standard.
# The names of the command options are the GNU long-style ones.
# note: this file is to be sourced.
#
# \meta generic
# \meta standard posix
#
##############################################################################

#set -u &&

test "$(basename -- $0)" != "posix" ||
{
	echo "$(basename $0): error: posix: this file is to be sourced." &&
	false
} &&

if test -n "${PS1:-}"
then
	unalias -a
fi &&

posix__command()
{
	posix__command_name="$1" &&
	unset posix__arguments &&
	posix__ok=true
} &&

posix__real_command()
{
	#echo "posix: execute:" $posix__command_name $posix__arguments 1>&2 &&
	posix__command_name=$(which $posix__command_name) &&
	$posix__ok &&
	eval command $posix__command_name $posix__arguments
} &&

posix__arguments__append()
{
	#echo "posix: append: '$@'" 1>&2
	posix__arguments="${posix__arguments:-} '$@'"
} &&

posix__error()
{
	echo "$(basename $0): posix: $posix__command_name: no posix translation for '$@'" &&
	posix__ok=false &&
	false
} &&

case "$(uname -s)" in
	Linux* | CYGWIN* | MINGW*) posix__os=gnu ;;
	*AIX*) posix__os=aix ;;
	Darwin*) posix__os=darwin ;;
	*) posix__os= ;;
esac &&

#############################################################################################
#############################################################################################
#############################################################################################

chmod()
{
	posix__command chmod &&
	for argument in "$@"
	do
		case "$argument" in
			--*)
				case "$argument" in
					--recursive) posix__arguments__append -R ;;
					--verbose)
						case "$posix__os" in
							gnu) posix__arguments__append "$argument" ;;
						esac ;;
					--version) posix__arguments__append "$argument" ;;
					*) posix__error "$argument" ;;
				esac ;;
			*) posix__arguments__append "$argument" ;;
		esac
	done &&
	posix__real_command
} &&

cp()
{
	posix__command cp &&
	for argument in "$@"
	do
		case "$argument" in
			--*)
				case "$argument" in
					--force) posix__arguments__append -f ;;
					--no-dereference) posix__arguments__append -P ;;
					--recursive) posix__arguments__append -RP ;;
					--preserve) posix__arguments__append -p ;;
					--archive)
						case "$posix__os" in
							gnu) posix__arguments__append --archive ;;
							*) posix__arguments__append -RPp ;;
						esac ;;
					--interactive) posix__arguments__append -i ;;
					--verbose)
						case "$posix__os" in
							gnu) posix__arguments__append "$argument" ;;
						esac ;;
					--version) posix__arguments__append "$argument" ;;
					*) posix__error "$argument" ;;
				esac ;;
			*) posix__arguments__append "$argument" ;;
		esac
	done &&
	posix__real_command
} &&

cmp()
{
	posix__command cmp &&
	for argument in "$@"
	do
		case "$argument" in
			--*)
				case "$argument" in
					--silent | --quiet) posix__arguments__append -s ;;
					--verbose) posix__arguments__append -l ;;
					--version) posix__arguments__append "$argument" ;;
					*) posix__error "$argument" ;;
				esac ;;
			*) posix__arguments__append "$argument" ;;
		esac
	done &&
	posix__real_command
} &&

cut()
{
	posix__command cut &&
	for argument in "$@"
	do
		case "$argument" in
			--*)
				case "$argument" in
					--characters) posix__arguments__append -c ;;
					--characters=*) posix__arguments__append -c && posix__arguments__append "$(echo "$argument" | sed 's/^[^=]+//')" ;;
					--bytes) posix__arguments__append -b ;;
					--bytes=*) posix__arguments__append -b && posix__arguments__append "$(echo "$argument" | sed 's/^[^=]+//')" ;;
					--delimiter) posix__arguments__append -d ;;
					--delimiter=*) posix__arguments__append -f && posix__arguments__append "$(echo "$argument" | sed 's/^[^=]+//')" ;;
					--fields) posix__arguments__append -f ;;
					--fields=*) posix__arguments__append -f && posix__arguments__append "$(echo "$argument" | sed 's/^[^=]+//')" ;;
					--only-delimiter) posix__arguments__append -s ;;
					--version) posix__arguments__append "$argument" ;;
					*) posix__error "$argument" ;;
				esac ;;
			*) posix__arguments__append "$argument" ;;
		esac
	done &&
	posix__real_command
} &&

find()
{
	# -perm mode <-> bit-for-bit, set-or-not-set
	# -perm -mode <-> all the bits set in mode are also set in the file
	# -perm +mode <-> any of the bits set in mode is also set the file ; not available on posix
	posix__command find &&
	for argument in "$@"
	do
		case "$argument" in
			--*)
				case "$argument" in
					--version) posix__arguments__append "$argument" ;;
					#*) posix__error "$argument" ;; [bohan] can be arguments after -exec
				esac ;;
			*) posix__arguments__append "$argument" ;;
		esac
	done &&
	posix__real_command
} &&

grep()
{
	posix__command grep &&
	for argument in "$@"
	do
		case "$argument" in
			--*)
				case "$argument" in
					--) posix__arguments__append -- ;;
					--fixed-strings) posix__arguments__append -F ;;
					--word-regexp) posix__arguments__append -w ;;
					--line-regexp) posix__arguments__append -x ;;
					--extended-regexp) posix__arguments__append -E ;;
					--regexp) posix__arguments__append -e ;;
					--file) posix__arguments__append -f ;;
					--ingore-case) posix__arguments__append -i ;;
					--invert-match) posix__arguments__append -v ;;
					--silent | --quiet) posix__arguments__append -q ;;
					--no-messages) posix__arguments__append -s ;;
					--only-matching) posix__error ;;
					--files-with-matches) posix__arguments__append -l ;;
					--files-without-match) posix__arguments__append -L ;;
					--recursive) posix__arguments__append -r ;;
					--no-filename) posix__arguments__append -h ;;
					--with-filename) posix__arguments__append -H ;;
					--lines-number) posix__arguments__append -n ;;
					--version) posix__arguments__append "$argument" ;;
					*) posix__error "$argument" ;;
				esac ;;
			*) posix__arguments__append "$argument" ;;
		esac
	done &&
	posix__real_command
} &&

egrep()
{
	grep --extended-regexp "$@"
} &&

fgrep()
{
	grep --fixed-strings "$@"
} &&

head()
{
	posix__command head &&
	for argument in "$@"
	do
		case "$argument" in
			--*)
				case "$argument" in
					--bytes) posix__arguments__append -c ;;
					--lines) posix__arguments__append -n ;;
					--version) posix__arguments__append "$argument" ;;
					--verbose)
						case "$posix__os" in
							gnu) posix__arguments__append "$argument" ;;
						esac ;;
					*) posix__error "$argument" ;;
				esac ;;
			*) posix__arguments__append "$argument" ;;
		esac
	done &&
	posix__real_command
} &&

id()
{
	posix__command id &&
	for argument in "$@"
	do
		case "$argument" in
			--*)
				case "$argument" in
					--real) posix__arguments__append -r ;;
					--user) posix__arguments__append -u ;;
					--group) posix__arguments__append -g ;;
					--groups) posix__arguments__append -G ;;
					--name) posix__arguments__append -n ;;
					--version) posix__arguments__append "$argument" ;;
					*) posix__error "$argument" ;;
				esac ;;
			*) posix__arguments__append "$argument" ;;
		esac
	done &&
	posix__real_command
} &&

ln()
{
	posix__command ln &&
	for argument in "$@"
	do
		case "$argument" in
			--*)
				case "$argument" in
					--symbolic) posix__arguments__append -s ;;
					--force) posix__arguments__append -f ;;
					--interactive)
						case "$posix__os" in
							gnu) posix__arguments__append --interactive ;;
						esac ;;
					--verbose)
						case "$posix__os" in
							gnu) posix__arguments__append "$argument" ;;
						esac ;;
					--version) posix__arguments__append "$argument" ;;
					*) posix__error "$argument" ;;
				esac ;;
			*) posix__arguments__append "$argument" ;;
		esac
	done &&
	posix__real_command
} &&

ls()
{
	posix__command ls &&
	for argument in "$@"
	do
		case "$argument" in
			--*)
				case "$argument" in
					--color=auto | --color=always)
						case "$posix__os" in
							gnu) posix__arguments__append "$argument" ;;
							darwin) posix__arguments__append -G ;;
						esac ;;
					--classify) posix__arguments__append -F ;;
					--format=across | --format=horizontal) posix__arguments__append -x ;;
					--format=commas) posix__arguments__append -m ;;
					--format=long | --format=verbose) posix__arguments__append -l ;;
					--format=single-column) posix__arguments__append -1 ;;
					--format=vertical) posix__arguments__append -C ;;
					--all) posix__arguments__append -a ;;
					--almost-all) posix__arguments__append -A ;;
					--directory) posix__arguments__append -d ;;
					--recursive) posix__arguments__append -R ;;
					--size) posix__arguments__append -s ;;
					--file-type) posix__arguments__append -p ;;
					--version) posix__arguments__append "$argument" ;;
					*) posix__error "$argument" ;;
				esac ;;
			*) posix__arguments__append "$argument" ;;
		esac
	done &&
	posix__real_command
} &&

m4()
{
	posix__command m4 &&
	for argument in "$@"
	do
		case "$argument" in
			--*)
				case "$argument" in
					--define) posix__arguments__append -D ;;
					--undefine) posix__arguments__append -U ;;
					--version) posix__arguments__append "$argument" ;;
					*) posix__error "$argument" ;;
				esac ;;
			*) posix__arguments__append "$argument" ;;
		esac
	done &&
	posix__real_command
} &&

make()
{
	# note: use the .POSIX special target.
	# POSIX has no include keyword.
	# env var MAKEFLAGS.
	posix__command make &&
	for argument in "$@"
	do
		case "$argument" in
			--*)
				case "$argument" in
					--directory) posix__arguments__append -C ;;
					--file | --makefile) posix__arguments__append -f ;;
					--silent | --quiet) posix__arguments__append -s ;;
					--environment-overrides) posix__arguments__append -e ;;
					--question) posix__arguments__append -q ;;
					--just-print) posix__arguments__append -n ;;
					--no-built-rules) posix__arguments__append -r ;;
					--no-builtin-variables) posix__error ;;
					--keep-going) posix__error ;;
					--no-keep-going) posix__arguments__append -S ;;
					--ignore-errors) posix__arguments__append -i ;;
					--debug) posix__arguments__append -d ;;
					--touch) posix__arguments__append -t ;;
					--version) posix__arguments__append "$argument" ;;
					*) posix__error "$argument" ;;
				esac ;;
			*) posix__arguments__append "$argument" ;;
		esac
	done &&
	posix__real_command
} &&

mkdir()
{
	posix__command mkdir &&
	for argument in "$@"
	do
		case "$argument" in
			--*)
				case "$argument" in
					--parents) posix__arguments__append -p ;;
					--mode) posix__arguments__append -m ;;
					--verbose)
						case "$posix__os" in
							gnu) posix__arguments__append "$argument" ;;
						esac ;;
					--version) posix__arguments__append "$argument" ;;
					*) posix__error "$argument" ;;
				esac ;;
			*) posix__arguments__append "$argument" ;;
		esac
	done &&
	posix__real_command
} &&

mv()
{
	posix__command mv &&
	for argument in "$@"
	do
		case "$argument" in
			--*)
				case "$argument" in
					--force) posix__arguments__append -f ;;
					--interactive) posix__arguments__append -i ;;
					--verbose)
						case "$posix__os" in
							gnu) posix__arguments__append "$argument" ;;
						esac ;;
					--version) posix__arguments__append "$argument" ;;
					*) posix__error "$argument" ;;
				esac ;;
			*) posix__arguments__append "$argument" ;;
		esac
	done &&
	posix__real_command
} &&

readlink()
{
	posix__command readlink &&
	for argument in "$@"
	do
		case "$argument" in
			--*)
				case "$argument" in
					--canonicalize) posix__arguments__append -f ;;
					--no-newline) posix__arguments__append -n ;;
					--silent | --quiet)
						case "$posix__os" in
							gnu) posix__arguments__append --silent ;;
						esac ;;
					--verbose)
						case "$posix__os" in
							gnu) posix__arguments__append "$argument" ;;
						esac ;;
					--version) posix__arguments__append "$argument" ;;
					*) posix__error "$argument" ;;
				esac ;;
			*) posix__arguments__append "$argument" ;;
		esac
	done &&
	posix__real_command
} &&

rm()
{
	# note: options must appears first in the argument list
	posix__command rm &&
	for argument in "$@"
	do
		case "$argument" in
			--*)
				case "$argument" in
					--force) posix__arguments__append -f ;;
					--recursive) posix__arguments__append -R ;;
					--verbose)
						case "$posix__os" in
							gnu) posix__arguments__append "$argument" ;;
							# [bohan] i don't remember, i think it is ... aix) posix__arguments__append -e ;;
						esac ;;
					--version) posix__arguments__append "$argument" ;;
					*) posix__error "$argument" ;;
				esac ;;
			*) posix__arguments__append "$argument" ;;
		esac
	done &&
	posix__real_command
} &&

rmdir()
{
	# note: options must appears first in the argument list
	posix__command rmdir &&
	for argument in "$@"
	do
		case "$argument" in
			--*)
				case "$argument" in
					--parents) posix__arguments__append -p ;;
					--verbose)
						case "$posix__os" in
							gnu) posix__arguments__append "$argument" ;;
						esac ;;
					--version) posix__arguments__append "$argument" ;;
					*) posix__error "$argument" ;;
				esac ;;
			*) posix__arguments__append "$argument" ;;
		esac
	done &&
	posix__real_command
} &&

sed()
{
	posix__command sed &&
	case "$posix__os" in
		gnu) posix__arguments__append --posix ;;
	esac &&
	for argument in "$@"
	do
		case "$argument" in
			--*)
				case "$argument" in
					--expression) posix__arguments__append -e ;;
					--file) posix__arguments__append -f ;;
					--verbose)
						case "$posix__os" in
							gnu) posix__arguments__append "$argument" ;;
						esac ;;
					--version) posix__arguments__append "$argument" ;;
					*) posix__error "$argument" ;;
				esac ;;
			*) posix__arguments__append "$argument" ;;
		esac
	done &&
	posix__real_command
} &&

sort()
{
	posix__command sort &&
	for argument in "$@"
	do
		case "$argument" in
			--*)
				case "$argument" in
					--ignore-leading-blanks) posix__arguments__append -b ;;
					--ingore-non-printing) posix__arguments__append -i ;;
					--ignore-case) posix__arguments__append -f ;;
					--dictionary-order) posix__arguments__append -d ;;
					--numeric-sort) posix__arguments__append -n ;;
					--field-separator) posix__arguments__append -t ;;
					--key) posix__arguments__append -k ;;
					--unique) posix__arguments__append -u ;;
					--merge) posix__arguments__append -m ;;
					--check) posix__arguments__append -c ;;
					--output) posix__arguments__append -o ;;
					--reverse) posix__arguments__append -r ;;
					--temporary-directory) posix__arguments__append -T ;;
					--verbose)
						case "$posix__os" in
							gnu) posix__arguments__append "$argument" ;;
						esac ;;
					--version) posix__arguments__append "$argument" ;;
					*) posix__error "$argument" ;;
				esac ;;
			*) posix__arguments__append "$argument" ;;
		esac
	done &&
	posix__real_command
} &&

tail()
{
	posix__command tail &&
	for argument in "$@"
	do
		case "$argument" in
			--*)
				case "$argument" in
					--bytes) posix__arguments__append -c ;;
					--lines) posix__arguments__append -n ;;
					--follow) posix__arguments__append -f ;;
					--verbose)
						case "$posix__os" in
							gnu) posix__arguments__append "$argument" ;;
						esac ;;
					--version) posix__arguments__append "$argument" ;;
					*) posix__error "$argument" ;;
				esac ;;
			*) posix__arguments__append "$argument" ;;
		esac
	done &&
	posix__real_command
} &&

tr()
{
	posix__command tr &&
	for argument in "$@"
	do
		case "$argument" in
			--*)
				case "$argument" in
					--delete) posix__arguments__append -d ;;
					--complement) posix__arguments__append -c ;;
					--squeeze-repeats) posix__arguments__append -s ;;
					--verbose)
						case "$posix__os" in
							gnu) posix__arguments__append "$argument" ;;
						esac ;;
					--version) posix__arguments__append "$argument" ;;
					*) posix__error "$argument" ;;
				esac ;;
			*) posix__arguments__append "$argument" ;;
		esac
	done &&
	posix__real_command
} &&

uname()
{
	posix__command uname &&
	for argument in "$@"
	do
		case "$argument" in
			--*)
				case "$argument" in
					--all) posix__arguments__append -a ;;
					--nodename) posix__arguments__append -n ;;
					--machine) posix__arguments__append -m ;;
					--operating-system) posix__arguments__append -o ;;
					--operating-system-implementation) posix__arguments__append -s ;;
					--operating-system-release) posix__arguments__append -r ;;
					--operating-system-version) posix__arguments__append -v ;;
					--verbose)
						case "$posix__os" in
							gnu) posix__arguments__append "$argument" ;;
						esac ;;
					--version) posix__arguments__append "$argument" ;;
					*) posix__error "$argument" ;;
				esac ;;
			*) posix__arguments__append "$argument" ;;
		esac
	done &&
	posix__real_command
}
