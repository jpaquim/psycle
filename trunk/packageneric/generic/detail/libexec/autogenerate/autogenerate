#! /usr/bin/env bash
# . $(dirname $0)/../posix.shell &&
export posix__shell=set && # because to be able to export functions, we're calling scripts in subshells (forked) like this: (. ./script)

##############################################################################
#
# This source is free software ; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation ; either version 2, or (at your option) any later version.
# copyright 1999-2006 johan boule <bohan@jabber.org>
# copyright 2004-2006 psycledelics <http://psycle.pastnotecut.org>
#
# \meta generic
# \meta standard posix
#
##############################################################################

set -eu &&

. $(dirname $0)/../find &&

main()
{
	local selfdir=$(cd $(dirname $0) && pwd) &&
	cd   $selfdir &&
	local  dir=${1:-} &&
	local file=${2:-} &&

	export PACKAGENERIC__ROOT=$(../root) &&

	if test -z "$file"
	then
		local calls=$(eval find ${dir:-.} -maxdepth 1 $(packageneric__find__dir__no_arch) | sort) &&
		if test -n "$calls"
		then
			for call in $calls
			do
				$selfdir/$(basename $0) $call ||
				{
	   				echoing "failed for $call." &&
			   		false
					return
				}
			done
		fi
	fi &&

	export PACKAGENERIC__OUTPUT__SUBPATH=packageneric/+autogenerated &&
	export PACKAGENERIC__OUTPUT=$PACKAGENERIC__ROOT/$PACKAGENERIC__OUTPUT__SUBPATH &&
	if test ! -d $PACKAGENERIC__OUTPUT
	then
		echoing "creating directory" mkdir -p $PACKAGENERIC__OUTPUT
	fi &&

	if test -z "$dir"
	then
		export PACKAGENERIC__SUBPATH=
	else
		# remove "@*" from the output path
		export PACKAGENERIC__SUBPATH=$(echo /$dir | sed 's:/@[^/]*::g' | sed 's:^/::' | sed 's:^\./::' | sed 's://:/:g' | sed 's:^\.$::')
	fi &&


	local calls=$(eval find ${dir:-.} -maxdepth 1 $(packageneric__find__file__no_arch ! -path ./$(basename $0) -name "${file:-\*}")) &&
	if test -n "$calls"
	then
		for call in $calls
		do
			(
				cd $PACKAGENERIC__ROOT &&
				echoing "calling: $call ..." &&
				(PACKAGENERIC__SUBPATH=$PACKAGENERIC__SUBPATH/$(basename $call) . $selfdir/$call)
			) ||
			{
   				echoing "failed for $call." &&
		   		false
				return
			}
		done
	fi ||

	{
   		echoing "failed for $PACKAGENERIC__ROOT." &&
   		false
   	}
} &&

#####################################################################################################
#####################################################################################################
#####################################################################################################

. $(dirname $0)/../echo &&

echo_custom()
{
	echo -en '\033[2;34m' &&
	echo "$@" &&
	echo -en '\033[0m'
} &&

echoing()
{
	local script_path=packageneric.$(basename $0)
	local comment=$1 && shift &&
	echo_custom "$script_path: $comment" &&
	if test $# != 0
	then
		echo_custom "$script_path: -> calling: $@" &&
		"$@"
	fi
} &&

#####################################################################################################
#####################################################################################################
#####################################################################################################

main "$@"
