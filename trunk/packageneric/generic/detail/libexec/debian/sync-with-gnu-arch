#! /bin/bash

###########################################################################################################
#
# This source is free software ; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation ; either version 2, or (at your option) any later version.
# Copyright (C) 1999-2005 Psycledelics http://psycle.pastnotecut.org : Johan Boule
#
# Builds and rsync debian archive
# \meta generic
# \meta standard gnu
#
###########################################################################################################

. $libexec/find &&

function sync
{
	echoing 'debian changelog sync to gnu-arch: querying gnu-arch ... logs ...' &&
	local gnu_arch__version__patch=$($libexec/gnu-arch/logs --reverse | head --lines 1 | sed 's/patch-//') &&
	echoing "debian changelog sync to gnu-arch: gnu-arch patch level: $gnu_arch__version__patch" &&
	if test -z "gnu_arch__version__patch"
	then
		echoing "debian changelog sync to gnu-arch: not in a gnu-arch project tree" &&
		return
	fi &&
	if ! echoing "debian changelog sync to gnu-arch: querying gnu-arch ... changes ..." $libexec/gnu-arch/changes
	then
		gnu_arch__version__patch__compare=$(expr $gnu_arch__version__patch + 1) &&
		echoing "debian changelog sync to gnu-arch: gnu-arch patch level after commit: $gnu_arch__version__patch__compare"
	else
		gnu_arch__version__patch__compare=$gnu_arch__version__patch &&
		echoing "debian changelog sync to gnu-arch: gnu-arch patch level before commit: $gnu_arch__version__patch__compare"
	fi &&
	echoing "debian changelog sync to gnu-arch: refreshing meta-information ..." $libexec/package/meta-information --refresh &&
	package__name=$($libexec/package/meta-information name) &&
	package__version=$($libexec/package/meta-information version) &&
	echoing "debian changelog sync to gnu-arch: refreshed debian version: $package__version" &&
	local debian__version__major=$($libexec/package/meta-information version--major) &&
	local debian__version__minor=$($libexec/package/meta-information version--minor) &&
	local debian__version__patch=$($libexec/package/meta-information version--patch) &&
	if test $debian__version__patch -lt $gnu_arch__version__patch__compare
	then
		echoing 'debian changelog sync to gnu-arch' debchange --newversion $debian__version__major.$debian__version__minor.$(expr $gnu_arch__version__patch + 1) syncing debian package version patch number with that of gnu-arch &&
		echoing "debian changelog sync to gnu-arch: refreshing meta-information ..." $libexec/package/meta-information --refresh &&
		package__name=$($libexec/package/meta-information name) &&
		package__version=$($libexec/package/meta-information version) &&
		echoing "debian changelog sync to gnu-arch: refreshed debian version: $package__version"
	else
		echoing "debian changelog sync to gnu-arch: debian and gnu-arch are equals"
	fi &&
	
	##################
	# nested packages
	
	if $option__nested_source_packages__embeed
	then
		if test -d $source/packageneric/package/nested
		then
			for dir in $(cd $source && eval find packageneric/package/nested -maxdepth 1 $(packageneric__find__dir__no_arch))
			do
				if test -e $source/$dir/packageneric/generic/detail/libexec/debian/sync-with-gnu-arch
				then
					echoing "nested source package $dir/" &&
					(
						local source=$source/$dir &&
						cd $source &&
						local libexec=$(pwd)/packageneric/generic/detail/libexec &&
						local package__name=$($source/packageneric/generic/detail/libexec/package/meta-information name) &&
						local package__version=$($source/packageneric/generic/detail/libexec/package/meta-information version) &&
						sync
					) &&
					echoing "poping back from $dir to parent source package $source/"
				fi
			done
		fi
	fi
}
