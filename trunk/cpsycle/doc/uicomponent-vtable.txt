/*
** Template for adding vtables to ui components
** copy vtable section above component init
** add virtual methods and protoypes
** rename <name> and <class>
** add name_vtable_init(self) after the component init
** rename <name> <name_vtableinit_init>
** (see existing classes/developer guide for vtables)
*/

/* prototypes */
static void name_on_destroy(class*);
static void name_onpreferredsize(class*,
	const psy_ui_Size* limit, psy_ui_Size* rv);
static void name_ondraw(class*, psy_ui_Graphics*);
static void name_onalign(class*);
static void name_on_mouse_down(class*, psy_ui_MouseEvent*);
/* vtable */
static psy_ui_ComponentVtable name_vtable;
static bool name_vtable_initialized = FALSE;

static void name_vtable_init(class* self)
{
	if (!name_vtable_initialized) {
		name_vtable = *(self->component.vtable);		
		name_vtable_initialized = TRUE;
	}
	self->component.vtable = &name_vtable;
}

/* methods */
name_vtable.on_destroy =
	(psy_ui_fp_component_on_destroy)
	name_on_destroy;
name_vtable.onalign =
	(psy_ui_fp_component_onalign)
	name_onalign;
name_vtable.onpreferredsize =
	(psy_ui_fp_component_on_preferred_size)
	name_onpreferredsize;
name_vtable.ondraw =
	(psy_ui_fp_component_ondraw)
	name_ondraw;
name_vtable.on_mouse_down =
	(psy_ui_fp_component_on_mouse_event)
	name_on_mouse_down;
name_vtable.on_mouse_move =
	(psy_ui_fp_component_on_mouse_event)
	name_onmousemove;
name_vtable.on_mouse_up =
	(psy_ui_fp_component_on_mouse_event)
	name_on_mouse_up;
name_vtable.on_timer =
(psy_ui_fp_component_on_timer)
name_on_timer;
