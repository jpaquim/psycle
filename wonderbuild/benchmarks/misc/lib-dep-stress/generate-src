#! /usr/bin/env python
# This source is free software ; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation ; either version 2, or (at your option) any later version.
# copyright 2009-2009 members of the psycle project http://psycle.sourceforge.net ; johan boule <bohan@jabber.org>

if __name__ == '__main__':
	import sys, os
	os.chdir(os.path.dirname(__file__))
	count = int(sys.argv[1])
	src_dir = 'src'
	if not os.path.exists(src_dir): os.mkdir(src_dir)
	f = open(os.path.join(src_dir, 'main.cpp'), 'wb')
	try:
		if count % 2 != 0:
			even = count - 1
			odd = count - 2
		else:
			even = count - 2
			odd = count - 1
		f.write('#include <wrapper' + str(count - 1) + '/wrapper.hpp>\n')
		f.write('#include <wrapper' + str(count - 2) + '/wrapper.hpp>\n')
		f.write('int main() {\n')
		f.write('\twrapper_even_' + str(even) + '();\n')
		f.write('\twrapper_odd_' + str(odd) + '();\n')
		f.write('\treturn 0;\n')
		f.write('}\n')
	finally:
		f.close()
	for i in xrange(count):
		dir = os.path.join(src_dir, 'wrapper' + str(i))
		if not os.path.exists(dir): os.mkdir(dir)
		f = open(os.path.join(dir, 'wrapper.hpp'), 'wb')
		try:
			f.write('#ifndef WRAPPER' + str(i) + '\n')
			f.write('#define WRAPPER' + str(i) + '\n')
			f.write('void wrapper_even_' + str(i) + '();\n')
			f.write('void wrapper_odd_' + str(i) + '();\n')
			f.write('#endif\n')
		finally:
			f.close()
		f = open(os.path.join(dir, 'wrapper_even.cpp'), 'wb')
		try:
			for j in xrange(0, i, 2): f.write('#include <wrapper' + str(j) + '/wrapper.hpp>\n')
			f.write('#include <iostream>\n')
			f.write('void wrapper_even_' + str(i) + '() {\n')
			for j in xrange(0, i, 2): f.write('\twrapper_even_' + str(j) + '();\n')
			if i % 2 == 0: f.write('\tstd::cout << ' + str(i) + " << '\\n';\n")
			f.write('}\n')
		finally:
			f.close()
		f = open(os.path.join(dir, 'wrapper_odd.cpp'), 'wb')
		try:
			for j in xrange(1, i, 2): f.write('#include <wrapper' + str(j) + '/wrapper.hpp>\n')
			f.write('#include <iostream>\n')
			f.write('void wrapper_odd_' + str(i) + '() {\n')
			for j in xrange(1, i, 2): f.write('\twrapper_odd_' + str(j) + '();\n')
			if i % 2 != 0: f.write('\tstd::cout << ' + str(i) + " << '\\n';\n")
			f.write('}\n')
		finally:
			f.close()
