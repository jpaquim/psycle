#! /bin/sh

set -x &&

jobs=4 &&

measure() {
	time "$@"
	#strace -fF "$@"
} &&

main() {
	op=$1 && shift &&
	tool=$1 && shift &&
	
	cd $(dirname $0)/bench-$tool &&

	case $op in
		reset) rm -Rf build-$tool ;;
		no-op) ;;
		small) touch lib_17/class_17.hpp ;;
		big)   touch lib_17/*.hpp ;;
	esac &&

	case $tool in
		wonderbuild)
			measure ../../wonderbuild.py --bld-dir=build-$tool --cxx=g++ --jobs=$jobs "$@"
		;;
	
		waf-dev-null)
			if ! test -d build-$tool
			then
				../../waf/waf-light configure
			fi &&
			# waf lacks a silent option!
			if test -x ../../waf/waf-light.dev-null
			then measure ../../waf/waf-light.dev-null --jobs=$jobs "$@"
			else measure ../../waf/waf-light --jobs=$jobs "$@"
			fi
		;;

		waf)
			if ! test -d build-$tool
			then
				../../waf/waf-light configure
			fi &&
			measure ../../waf/waf-light --jobs=$jobs "$@"
		;;
	
		scons)
			SCONS_LIB_DIR=$(pwd)/../../scons/src/engine \
				measure python ../../scons/src/script/scons.py --no-cache --jobs=$jobs "$@"
		;;

		make)
			if test $op = reset
			then
				make -r clean --silent
			fi &&
			measure make -r --jobs=$jobs "$@"
		;;

		jam)
			if test $op = reset
			then
				jam clean
			fi &&
			measure jam -j$jobs "$@"
		;;

		autotools)
			if ! test -f configure
			then
				autoreconf --install --symlink
			fi &&
			if ! test -d build-$tool
			then
				mkdir build-$tool &&
				(cd build-$tool && ../configure --disable-shared CXXFLAGS=)
			fi &&
			measure make -C build-$tool -r --jobs=$jobs "$@"
		;;

		cmake)
			if ! test -d build-$tool
			then
				mkdir build-$tool &&
				(cd build-$tool && cmake ..)
			fi &&
			measure make -C build-$tool -r --jobs=$jobs "$@"
		;;
	esac
} &&

main "$@"
