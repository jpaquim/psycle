c = BuildmasterConfig = {}

c['projectName'] = 'psycle'
c['projectURL'] = 'http://psycle.sourceforge.net'
c['buildbotURL'] = 'http://retropaganda.info:8010/'

from buildbot.changes.pb import PBChangeSource
c['sources'] = [PBChangeSource()]

psycle_svn = 'https://svn.sourceforge.net/svnroot/psycle/trunk'

c['bots'] = [
	('bohan0', 'password'),
	('bohan1', 'password'),
	('bohan2', 'password')
]

slaves = ['bohan0', 'bohan1', 'bohan2']

from buildbot import locks
from buildbot.process import factory, step
from buildbot.scheduler import Scheduler, AnyBranchScheduler, Dependent

cpu_lock = locks.SlaveLock('cpu')

c['builders'] = []
c['schedulers'] = []

bunch_timer=6*60

def filter(change, prefixes):
	for file in change.files:
		for prefix in prefixes:
			if file.startswith(prefix):
				return True
	return False

c['builders'].append(
	{
		'name': 'universalis',
		'slavenames': slaves,
		'builddir': 'universalis',
		'factory': factory.GNUAutoconf(
			factory.s(step.SVN, mode='update', svnurl = psycle_svn),
			configure  ="./universalis/autotools.bootstrap && mkdir -p build/universalis && cd build/universalis && ../../universalis/configure --config-cache CPPFLAGS='' CXXFLAGS='-pipe -Wall -O0' CFLAGS='-pipe -Wall -O0' CXX='g++' LDFLAGS=''",
			compile = "make -C build/universalis all",
			test = None
		)
		#'factory': factory.BuildFactory(
		#	[
		#		factory.s(step.SVN, mode = 'update', svnurl = psycle_svn),
		#		factory.s(step.Compile, command = 'scons --directory=universalis')
		#	]
		#)
	}
)
c['schedulers'].append(
	Scheduler(
		name = 'universalis',
		branch = None,
		treeStableTimer = bunch_timer,
		builderNames = ['universalis'],
		fileIsImportant = lambda change: filter(change, ['/trunk/universalis/', '/trunk/diversalis/', '/trunk/packageneric/'])
	)
)

c['builders'].append(
	{
		'name': 'freepsycle',
		'slavenames': slaves,
		'builddir': 'freepsycle',
		'factory': factory.GNUAutoconf(
			factory.s(step.SVN, mode='update', svnurl = psycle_svn),
			configure  ="./freepsycle/autotools.bootstrap && mkdir -p build/freepsycle && cd build/freepsycle && ../../freepsycle/configure --config-cache CPPFLAGS='' CXXFLAGS='-pipe -Wall -O0' CFLAGS='-pipe -Wall -O0' CXX='g++' LDFLAGS=''",
			compile = "make -C build/freepsycle all",
			test = None
		)
	}
)
c['schedulers'].append(
	Scheduler(
		name = 'freepsycle',
		branch = None,
		treeStableTimer = bunch_timer,
		builderNames = ['freepsycle'],
		fileIsImportant = lambda change: filter(change, ['/trunk/freepsycle/'])
	)
)

c['builders'].append(
	{
		'name': 'ngrs',
		'slavenames': slaves,
		'builddir': 'ngrs',
		'factory': factory.GNUAutoconf(
			factory.s(step.SVN, mode = 'update', svnurl = psycle_svn),
			configure = "./ngrs/autotools.bootstrap && mkdir -p build/ngrs && cd build/ngrs && ../../ngrs/configure --config-cache CXXFLAGS='-pipe -Wall -O0'",
			compile = "make -C build/ngrs all",
			test = None
		)
	}
)
c['schedulers'].append(
	Scheduler(
		name = 'ngrs',
		branch = None,
		treeStableTimer = bunch_timer,
		builderNames = ['ngrs'],
		fileIsImportant = lambda change: filter(change, ['/trunk/ngrs/'])
	)
)

c['builders'].append(
	{
		'name': 'xpsycle',
		'slavenames': slaves,
		'builddir': 'xpsycle',
		'factory': factory.GNUAutoconf(
			factory.s(step.SVN, mode = 'update', svnurl = psycle_svn),
			configure = "./xpsycle/autotools.bootstrap && mkdir -p build/xpsycle && cd build/xpsycle && ../../xpsycle/configure --config-cache CXXFLAGS='-pipe -Wall -O0'",
			compile = "make -C build/xpsycle all",
			test = None
		)
	}
)
c['schedulers'].append(
	Scheduler(
		name = 'xpsycle',
		branch = None,
		treeStableTimer = bunch_timer,
		builderNames = ['xpsycle'],
		fileIsImportant = lambda change: filter(change, ['/trunk/xpsycle/'])
	)
)

c['builders'].append(
	{
		'name': 'xpsycle.plugins',
		'slavenames': slaves,
		'builddir': 'xpsycle.plugins',
		'factory': factory.GNUAutoconf(
			factory.s(step.SVN, mode = 'update', svnurl = psycle_svn),
			configure = "./xpsycle.plugins/autotools.bootstrap && mkdir -p build/xpsycle.plugins && cd build/xpsycle.plugins && ../../xpsycle.plugins/configure --config-cache CPPFLAGS='' CXXFLAGS='-pipe -Wall -O0' CFLAGS='-pipe -Wall -O0' CXX='g++' LDFLAGS=''",
			compile = "make -C build/xpsycle.plugins all",
			test = None
		)
	}
)
c['schedulers'].append(
	Scheduler(
		name = 'xpsycle.plugins',
		branch = None,
		treeStableTimer = bunch_timer,
		builderNames = ['xpsycle.plugins'],
		fileIsImportant = lambda change: filter(change, ['/trunk/xpsycle.plugins/', '/trunk/psycle/src/psycle/plugins/', '/trunk/psycle/src/psycle/plugin.hpp', '/trunk/psycle/src/psycle/plugin_interface.hpp', '/trunk/psycle/src/psycle/helpers/'])
	)
)

c['builders'].append(
	{
		'name': 'mjoo',
		'slavenames': slaves,
		'builddir': 'mjoo',
		'factory': factory.BuildFactory(
			[
				factory.s(step.SVN, mode = 'update', svnurl = 'http://svn.zeitherrschaft.org/mjoo/trunk'),
				factory.s(step.Compile, command = 'scons')
			]
		)
	}
)
c['schedulers'].append(
	Scheduler(
		name = 'mjoo',
		branch = None,
		treeStableTimer = bunch_timer,
		builderNames = ['mjoo'],
		fileIsImportant = lambda change: filter(change, ['/trunk/mjoo', '/trunk/libmjoo'])
	)
)

c['slavePortnum'] = 9989

c['status'] = []

from buildbot.status import html
c['status'].append(html.Waterfall(http_port = 8010))

from buildbot.status import words
c['status'].append(words.IRC(host = 'irc.efnet.net', nick = 'buildborg', channels = ['#psycle']))
c['status'].append(words.IRC(host = 'irc.freenode.net', nick = 'psycle-buildborg', channels = ['#mjoo']))

c['debugPassword'] = 'debugpassword'
