#! /bin/bash

###########################################################################################################
#
# This source is free software ; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation ; either version 2, or (at your option) any later version.
# Copyright (C) 1999-2005 Psycledelics http://psycle.pastnotecut.org : Johan Boule
#
# Builds and rsync debian archive
# \meta generic
# \meta standard gnu
#
###########################################################################################################

set -o nounset &&
#set -o failglob &&

function main
{
	#####################################################################################################
	#####################################################################################################
	#####################################################################################################

	# options
		# default
			local source_root= &&
			local build_root= &&
			local source__distribution= &&
			local binary__distribution= &&
			local distribution__section_component=main &&
			local option__upload=false &&
			local packages__remote= &&
			local packages__stage= &&
			local option__nested_source_packages=false &&
			local option__no_chroot=false &&
			local option__cross_packaging=false &&
		# command lines
			while test $# != 0
			do
				case $1 in
					--source-root) shift && source_root=$1 ;;
					--build-root) shift && build_root=$1 ;;
					--source-distribution) shift && source__distribution=$1 ;;
					--binary-distribution) shift && binary__distribution=$1 ;;
					--distribution-section-component) shift && distribution__section_component=$1 ;;
					--upload) option__upload=true ;;
					--packages) shift && packages__remote=$1 ;;
					--stage-packages) shift && packages__stage=$1 ;;
					--nested-source-packages) option__nested_source_packages=true ;;
					--no-chroot) option__no_chroot=true ;;
					--cross-packaging) option__cross_packaging=true ;;
					*) echoing "unexpected option $1 in $@" ; false ; return ;;
				esac &&
				shift
			done &&
		# missing
			if test -z "$source_root" -o -z "$build_root"
			then
				echoing "missing parameters on the command line" &&
				false
				return
			fi &&
	
	#####################################################################################################
	#####################################################################################################
	#####################################################################################################

	local libexec=$(cd $(dirname $0)/.. && pwd) &&
	local source=$($libexec/root) &&
	. $libexec/debian/archive/build &&
	. $libexec/find &&

	local package__name=$(cd $source && dpkg-parsechangelog | sed --silent 's/^Source: //p') &&
	local package__version=$(cd $source && dpkg-parsechangelog | sed --silent 's/^Version: //p') &&

	#####################################################################################################
	#####################################################################################################
	#####################################################################################################

	# ensure dist/source dir includes the version in its name (needed for nested source packages)
	{	
		if test $(basename $source) != $package__name-$package__version
		then
			mv $source $(dirname $source)/$package__name-$package__version &&
			source=$(dirname $source)/$package__name-$package__version &&
			libexec=$source/packageneric/generic/detail/libexec
		fi
	} &&

	if test -z "$packages__stage"
	then
		packages__stage=$build_root/++packageneric/packages &&
		mkdir --verbose $packages__stage --parents
	fi &&
			
	#####################################################################################################
	#####################################################################################################
	#####################################################################################################

	#################
	# source package
	
	(cd $packages__stage && echoing "building source package $source" dpkg-source -b $source) &&

	##################
	# nested packages
	
	if $option__nested_source_packages
	then
		(
			cd $source &&
			if test -d packageneric/package/nested
			then
				for dir in $(eval find packageneric/package/nested -maxdepth 1 $(packageneric__find__dir__no_arch))
				do
					if test -x $dir/packageneric/generic/detail/libexec/debian/build
					then
						echoing "nested source package $dir/" \
							$dir/packageneric/generic/detail/libexec/debian/build \
								--source-root $source_root/$dir \
								--build-root $build_root \
								--source-distribution "$source__distribution" \
								--binary-distribution "$binary__distribution" \
								$(if test -n "$distribution__section_component" ; then echo --distribution-section-component $distribution__section_component ; fi) \
								--stage-packages $packages__stage \
								--nested-source-packages \
								$(if $option__no_chroot ; then echo --no-chroot ; fi) \
						&&
						echoing "poping back from $dir to parent source package $source/"
					fi ||
					return
				done
			fi
		)
	fi &&

	###############
	# distribution
	
	if test -z "$source__distribution"
	then
		source__distribution=${PACKAGENERIC__PACKAGE__ARCHIVE:-$(cd $source_root && dpkg-parsechangelog | sed --silent 's/^Distribution: //p')}
	fi &&
	
	if $option__cross_packaging && test "$binary__distribution" != experimental -o "$source__distribution" != unstable
	then
		option__cross_packaging=false
	fi &&
	
	if test -n "$binary__distribution"
	then
		##################
		# binary packages
		
		if ! $option__no_chroot
		then
			if test ! -e /var/cache/pbuilder/base.$binary__distribution.tgz
			then
				{
					scope distribution__name &&
					case $binary__distribution in
						stable  ) local distribution__name=sarge ;;
						testing ) local distribution__name=etch  ;;
						unstable) local distribution__name=sid   ;;
						*       ) local distribution__name=$binary__distribution ;;
					esac &&
					if test ! -e /var/cache/pbuilder/base.$distribution__name.tgz
					then
						echoing sudo ${PACKAGENERIC__SUDO:-sudo} pbuilder create --basetgz /var/cache/pbuilder/base.$distribution__name.tgz --distribution $distribution__name
					fi &&
					if test $distribution__name != $binary__distribution
					then
						echoing sudo ${PACKAGENERIC__SUDO:-sudo} ln --verbose --symbolic base.$distribution__name.tgz /var/cache/pbuilder/base.$binary__distribution.tgz
					fi &&
					unset distribution__name
				}
			fi &&
			if $option__nested_source_packages
			then
				local packages__extra__mount=$packages__stage
				local packages__extra=.
			else
				archive__download &&
				local packages__extra__mount=$packages__remote/$packageneric__remote__host/$packageneric__remote__path/$packages/debian/dists/$binary__distribution &&
				local packages__extra=$source__distribution$(if test $distribution__section_component = main ; then echo /$distribution__section_component ; fi)
			fi &&
			echoing "chroot-building binary $(dpkg-architecture -qDEB_HOST_ARCH) packages $source" \
				$libexec/debian/archive/pbuilder \
					/var/cache/pbuilder/base.$binary__distribution.tgz \
					$packages__extra__mount \
					$packages__extra \
					$packages__stage/{${package__name}_$package__version.dsc,} &&
			unset packages__extra &&
			unset packages__extra__mount &&
			{
				# todo we don't need to lintian all packages again, just the ones of this source package
				echoing "linting packages $source" lintian --display-info $packages__stage/*.changes ||
				# todo removes this once problem is resolved in stable distros too
				echo-custom "lintian failed, but we don't stop because this might be an internal error due to objdump on /usr/lib/debug"
			}
		else
			(
				echoing "cd distdir $source" cd $source &&
				echoing "building binary $(dpkg-architecture -qDEB_HOST_ARCH) packages $source" dpkg-buildpackage -rfakeroot -tc -b &&
				echoing "cd distdir/.. $source/.." cd .. &&
				echoing "linting packages $source" lintian --display-info *.changes &&
				echoing "installing binary $(dpkg-architecture -qDEB_HOST_ARCH) packages $source" ${PACKAGENERIC__SUDO:-sudo} dpkg --install --recursive . &&
				echoing "collecting in accumulating staging archive" mv --verbose *.{changes,deb} $packages__stage
			)
		fi
	fi &&
	
	#####################################################################################################
	#####################################################################################################
	#####################################################################################################
	
	(
		cd $packages__stage &&
		
		###################
		# source changelog
	
		mkdir --verbose changelogs --parent &&
		gzip --best --rsyncable < $source/debian/changelog > changelogs/$package__name.gz &&
	
		#####################################################################################################
		#####################################################################################################
		#####################################################################################################

		if test $source__distribution = unstable
		then
			ln --verbose --symbolic ${package__name}_$package__version.tar.gz $package__name.tar.gz
		fi
	) &&
				
	#####################################################################################################
	#####################################################################################################
	#####################################################################################################

	if test -n "$packages__remote"
	then
		archive
	fi &&
	
	#####################################################################################################
	#####################################################################################################
	#####################################################################################################

	if $option__upload
	then
		(
			cd $source_root &&
			archive__name &&
			echoing "commiting" \
				$libexec/version-control-systems/commit \
					"package $package__name version $package__version released to $packageneric__remote__host:$packageneric__remote__path in archive $binary__distribution/$source__distribution" ||
			echoing "not commited."
		)
	fi
} &&

#####################################################################################################
#####################################################################################################
#####################################################################################################

function scope
{
	:
} &&

function echo-custom
{
	echo -en '\e[5;34m' &&
	echo "$@" &&
	echo -en '\e[0m'
} &&

function echoing
{
	local script_path=packageneric.debian.$(basename $0)
	local comment=$1 && shift &&
	echo-custom "$script_path: $comment" &&
	if test $# != 0
	then
		echo-custom "$script_path: -> calling: $@" &&
		"$@"
	fi
} &&

#####################################################################################################
#####################################################################################################
#####################################################################################################

main "$@" &&
echoing "completed successfully for $(pwd) $*" ||
{
	echoing "failed for $(pwd) $*" &&
	false
}
