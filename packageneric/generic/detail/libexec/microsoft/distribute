#!/bin/bash

##############################################################################
#
# This source is free software ; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation ; either version 2, or (at your option) any later version.
# copyright 1999-2007 psycledelics http://psycle.pastnotecut.org : johan boule
#
# On microsoft's operating system, we lack a software distribution system
# (This operating system is not a distribution, it's both proprietary and anarchic).
# So, instead of building a package like on operating systems which have distributions,
# we distribute a dir containing every bits of software needed, as a self-contained raw binary "package".
#
# \meta generic
# \meta hook /build
# \meta standard gnu
#
##############################################################################

function main
{
	local installation_directory=$(cd $1 && shift && pwd) ||
	{
		echo "$(basename $0): parameter expected: the directory you passed as --prefix option to the configure script." &&
		false
	} &&
	local source_package_directory=$(cd $(dirname $0)/.. && pwd) &&
	
	source $source_package_directory/bin/map-local-user-account-name-to-remote-user-account-name $source_package_directory &&

	local package__tar_name=$(cat $source_package_directory/+package-meta-information/tar-name | sed 's/"//g') &&
	local package__version=$(cat $source_package_directory/+package-meta-information/version | sed 's/"//g') &&

	##############################
	# uploads the source archive.
	##############################
	{
		echo-custom "$(basename $0): Entering source package directory: $source_package_directory" &&
		cd $source_package_directory &&
		{
			local src=${package__tar_name}_$package__version &&
			with-echo "Uploading the source archive" ${SCP:-scp} ../$src.tar.gz $remote__user@$remote__host:$remote__path/packages/standard-source-tarball/$src.unofficial.tar.gz &&
			with-echo "Updating timestamps" ${SSH:-ssh} $remote__user@$remote__host $remote__path/update-timestamps
		}
	} &&


	#############################
	# builds the binary archive.
	#############################
	{
		echo-custom "$(basename $0): Entering installation directory: $installation_directory" &&
		cd $installation_directory &&
		rm --verbose --force $package__tar_name.bin.7z &&
		with-echo "Making the binary archive" ${SEVEN_ZIP:-7za} a -ms=on -mx=9 -m0=BCJ2 -m1=LZMA -m2=LZMA -m3=LZMA -mb0:1 -mb0s1:2 -mb0s2:3 $package__tar_name.bin.7z $package__tar_name-$package__version &&
		echo-custom "$(basename $0): Self-contained redistributable binary package is at: $(pwd)/$package__tar_name.bin.7z (contains $package__tar_name-$package__version)."
	} &&
	
	##############################
	# uploads the binary archive.
	##############################
	{
		with-echo "Uploading the binary archive" ${SCP:-scp} $package__tar_name.bin.7z $remote__user@$remote__host:$remote__path/packages/microsoft &&
		with-echo "Updating timestamps" ${SSH:-ssh} $remote__user@$remote__host $remote__path/update-timestamps
	} &&

	echo-custom "$(basename $0): Completed successfully." ||
	{
		echo-custom "$(basename $0): Failed for distribution of installation $installation_directory and source $source_package_directory" &&
		false
	}
} &&

function echo-custom
{
	echo -en '\e[1;34m'
	echo "$@"
	echo -en '\e[0m'
} &&

function with-echo
{
		local comment=$1 && shift &&
		echo-custom "$(basename $0): $comment ..." &&
		echo-custom "$(basename $0): Calling: $@" &&
		"$@"
} &&

main "$@"
